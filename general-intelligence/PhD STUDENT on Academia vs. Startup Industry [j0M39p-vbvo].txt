Howdy! My name is Daniel Van Zant. I am currently getting a PhD in Computational Neuroscience from Florida Atlantic University.
I also have a startup that I'm working on getting funded called NOSI.
Both my PhD dissertation and my startup are kind of centered around building tools for knowledge workers using this new technology we have called Large Language Models.
I also really enjoy drift racing and I love being out in nature, hence why I asked Addy to come out here with me.
I grew up spending more time outside than I did inside and I think that influenced me a lot.
This is where I feel at home. I love camping out in the Everglades and everything.
And I think also being out here really influenced me a lot in terms of going into science and being really interested in the things there.
Because instead of spending my time in a big city growing up with all of the entertainment that you have there,
I spent my time in the woods looking really closely at leaves and trees and bugs and badgers and occasional alligator or snake because I'm in Florida.
I've been asked to talk about some of the differences between working in academia and working in the startup space as someone who kind of has a foot in both camps.
And so I think the central difference that I want to pull out and I can talk about this a little bit more at length on both sides.
But the central difference I want to pull out is that the best thing about academia is it's really rigorous and the best thing about the startup space is that things move really quickly.
And it's not hard to see that they're sort of a fundamental tension between these two things.
If you're doing things really, really rigorously, it's challenging to move quickly because you want lots and lots and lots of checks and balances.
If you're doing things really quickly, it's hard to be rigorous because you're just moving as quickly as you can.
You're not doing any sort of checks and balances.
And so I would say the biggest failures on each side of sort of really focusing on one or the other of these is in academia.
You have people who unfortunately spend a career sort of making extremely incremental improvement and don't get very far with it.
Sabine Hassenfelder has talked about this a bit and the startup space, you get people who sell something that they can't really build.
Sometimes it's an honest mistake and even they don't know they can't build it.
And it's because they haven't been rigorous.
So I think Theranos is a really great example of this because there's not those same kinds of checks and balances for rigor and academia.
So Theranos was able to get a really long way before they got investigated and all the people surrounding that got in a lot of trouble.
By the way, just on a quick note, if you're watching this and you're saying, hey, I want to be halfway between rigor and speed where things are a little bit rigorous and a little bit speedy.
I would recommend getting into industry or defense research.
If I would draw out a line sort of between rigor and speed, startups would be all the way over here at maximum speed, minimum rigor.
Academia would be all the way up here at minimum speed, maximum rigor.
And then kind of in between, you have industry research, defense research, all of this other stuff.
So there's this question here of if there's this trade off between rigor and speed, has there ever been a place that has a good balance between them?
And if so, what is that kind of place to look like?
And there's a few examples of that that come to mind that are specific.
The examples historically are Skunk Works, which was a division of Lockheed Martin that did crazy, crazy defense research.
I don't think we even still know most of what they did, but just crazy, crazy stuff.
There is Xerox PARC. And so essentially it was this huge team of computer scientists that were well funded.
They came up with the user interface for computers as we know it today and a lot of other stuff about computers as we know them today.
Ideas that were way, way ahead of their time.
It's kind of a funny story, actually, because Xerox at some point said, well, this has nothing to do with paper.
We're going to stop funding it.
Somebody offered to buy all of that intellectual property.
That person was Steve Jobs, and he used all of that to build the Apple, too, which was the most famous home computer early on.
So huge. And then the third one is the Santa Fe Research Institute, which does enormous,
enormous, enormous complex systems work. When I think about what are the similarities between all of those,
they've all used this model where you have an extremely, extremely rigorous selection process.
So you're not looking to hire a huge amount of people.
You're looking to hire a short list of high quality people.
Xerox PARC only had like 50 people working at it, and they created the computer as we know it today and defined the direction of how computers are built for like the next 40 years or something ridiculous.
And so you're extremely, extremely picky about the people you choose, and you make sure you choose people who are naturally kind of rigorous people.
And so when someone comes up with an idea, you say, they're the kind of people who say, okay, well, how could we test that?
How could we, in particular, how can we test that within a few days with a small amount of money in space and time and all of this other stuff?
And the training you need to get to be that kind of scientifically rigorous naturally actually comes from academia.
And so I think if there's something that is the best about academia aside from the work that gets produced within academia,
because there really is a lot of great work there in terms of cancer research, Alzheimer's research, everything else.
But if there's something good aside from that, it's that it produces the kind of people who have this mindset naturally.
And so I think if you want to create something that has rigor and speed, then you need to take those people out of academia.
And then you need to treat this group of people kind of the same way the startup world treats people where you're just throwing buckets and buckets and buckets of money at them.
You pay them enough, obviously, to have a good standard of living.
You pay them enough so that they have funding for their research projects.
And honestly, the funding for the research projects isn't as necessary as people think.
The Santa Fe Institute mostly just pays their people well individually.
They don't offer lab space or lab equipment and things like that.
They tell people if you want to do scientific work, you need to collaborate with other people and it works.
They produce lots and lots and lots of great work and have consistently.
And so you really just need to take a group of people who are naturally scientifically rigorous.
Pay them very well enough that they're willing to leave whatever they were doing and make sure they're thinking in the same direction.
And so all of these places have a focus of some sort defense research, how to make a computer that's easy for humans to use complex systems.
And you kind of put them all together, let them hang out with each other, let them come up with ideas.
One of the nice things is in addition to selecting for scientific rigor, you also select for hard work.
I've kind of gone back and forth between academia and the sort of tech startup world.
After I graduated from college, I worked as a machine learning subject matter expert for a little bit for the Florida Department of Health
and worked with a lot of really great software engineers there.
And then I had some other jobs where basically my job was to know a lot of things about machine learning and make presentations on what is the best way to tackle this problem.
Kind of do things at a high level.
And so and then I decided to make the transition into academia because I realized that a lot of the kind of jobs I was looking for,
most of which were in private industry, were the kind of jobs that required a Ph.D.
And before I went into academia, I thought, oh, why did they do this?
It's just the arbitrary thing, et cetera, et cetera.
But now that I've gotten some Ph.D. training under my belt and I'm in the program and everything,
I'm much more sympathetic to requiring a Ph.D. for these sorts of high level thinking, high level research jobs,
because like I mentioned, a Ph.D. really teaches you to think a certain way and a certain way that's really productive.
If you're doing really high level thinking, it teaches you to think rigorously.
It teaches you to not go completely off the deep end without ever doing an experiment to test your ideas.
Most of the time, there's some notable examples where I think that failed.
But most of the time, it gives you a really good skill set.
And so I think if you want to be so you can be sort of an incrementalist startup person and you can say,
all right, well, there's this technology and there's this problem.
And so it's semi obvious that if you know something about the technology and you can find funding,
you can solve this problem and you can 10x your money.
And I think that if your goal is to make a lot of money, that's probably what you should do.
You should not get a Ph.D. and take five years of your life and get a tiny stipend compared to whatever the cost of living in the area is.
But I think there is another type of founder and this is someone who says whose focus is not on making a huge amount of money
and then making a public exit or whatever other ways you make money in that space.
Their focus is really on solving a big problem and figuring out a way to solve the big problem that's profitable
so that they can get lots of people's money who are really interested in 10xing their money to solve that problem.
And I think if you want to be this kind of person, I would highly recommend some sort of training in higher education
to help you learn to think in the ways that you need to as a founder there.
And then the other thing I would recommend is once you're used to academia,
find someone to partner with who is outside of academia and who knows more about that marketing and business side of things,
who has more of that incrementalist mindset because you're really going to need that person.
And so that would be my kind of my thought on it.
And honestly, that's what I'm trying to do now.
And so I've been in academia for a while, gotten through a good chunk of my Ph.D.
And I have this idea and it's been sitting in my mind before LLMs got big.
And it's this idea of how do I create a knowledge base that builds on itself and grows itself.
And is almost like a lifelong research companion.
And so I've been working with tools like Obsidian and Rome Research and LogSeq and these kinds of tools for thought,
where you build a lifelong knowledge base for a long time now.
I'm very excited about them.
I built extensions for some of them and I had this question in the back of my mind.
And I was somewhat frustrated because I did some research into the natural language processing side of things before ChatGPT.
And I was like, all right, there's some things you can do to automate some of the things you might want to do here.
Like I looked into making an automated language simplifier that uses a giant thesaurus data set called MOBI to use simpler words for things, things like that.
But this dream I have of me working on my knowledge base and taking these notes on this paper
and putting in these ideas into a knowledge base and then going to sleep.
And when I wake up, the knowledge base has developed itself so that it's more helpful to me.
And maybe it's even generated some novel ideas was nowhere close.
Since then, large language models have gotten really big.
And because of that, I've come up with a framework that's extremely hallucination free for building this kind of thing.
And I've implemented it at my company, NOSI.
It's called a living knowledge engine.
And so my interest in this is not centrally to make money, even though everyone would love to have more money as would I.
It's that I think there's this really good problem to solve.
And if you solve it, people in research and development can do their work that much quicker,
iterate on things that much quicker and move us into the future that much quicker,
land us on Mars that much quicker, solve cancer that much quicker,
work on large economic and social problems that much more quickly.
And I think that's enormously impactful if you can build almost people throw around the phrase a second brain.
But I mean, a real second brain, like a second brain that sort of develops on its own and comes up with good ideas on its own.
It synthesizes the papers you're reading and the books you're reading on its own.
And so that's what I'm working on. And I've had to do that very rigorously and sort of do experiments at each step.
But there's another part to this, which is that eventually I'd like to be working on this full time.
If anyone's excited about the idea and they have the money to pay me to do that, then please contact me.
But I'd love to be working on this full time and I'd love to have a team working on this with me.
And so for that part of things, it's not like I'm going to find grants from the NIH or NSF to fund this project.
So what I need to do and what I've been doing with a partner of mine is figure out a way to make this idea profitable.
And we've done that. And so we've seen really great results with this in terms of legal discovery,
where you can throw in all of these emails and documents from all of these people.
We've seen some results with medical documentation.
We've seen some results with giant tabular enterprise data.
Obviously, there's the opportunity in research and development.
And so we're really currently building the project around these things and figuring out how we can make the most money,
not for the goal of making the most money and getting ourselves a public exit,
but for the goal of getting money from other people to build this idea,
giving them a very nice public exit down the road, which we think we will.
And then for ourselves, maybe spending some of our money to build out the version of this project,
sort of from the base edition that is more along the lines of what we're thinking of something that really helps researchers solve problems quickly,
a lifelong AI research assistant.
And so this is a good example of a life path that I've taken.
And I would recommend to people who really want to solve big problems, which is figure out a problem,
get yourself into higher education, learn how to think rigorously and logically,
and come up with tests for your problem and good methods and all of this other stuff,
and then figure out a way to make solving your problem profitable,
which if it's a big enough problem, there almost always is a way to make it profitable,
and get into the startup space, make some other people a whole lot of money,
and in the process, really make some traction on this big problem that you're working on
that you think is going to help humans in a big way.
Everyone here should like and subscribe. This is an awesome channel.
There's lots of people smarter than me on here talking about lots of things more interesting than what I've just talked about.
So you should definitely like and subscribe so you can see more of that.
You can find me on Twitter. You can find my website.
You can find my sub stack that I want to start posting on very soon.
And I'm going to ask for all of those to be in the description.
So I'm going to assume they're in there.
